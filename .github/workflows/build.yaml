name: Build and Publish Web App

on:
  workflow_dispatch:
    inputs:
        service:
          required: true
          type: choice
          description: 'Choose the service you wish to build and deploy'
          options: 
            - uselessfact
            - funnyfact
env:
  IMAGE_REPO: 'ghcr.io/shimonelbaz/moon_active_task'
  DNS_NAME: "excercise.elbaz.io"
  SERVICE_PARAMETERS: '''{
                      "funnyfact":{"url":"https://api.chucknorris.io/jokes/random", "port":"8000"}, 
                      "uselessfact":{"url":"https://uselessfacts.jsph.pl/api/v2/facts/random","port":"8001"}
                      }'''

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Service Parameters
        id: service-parameters
        run: |
                service_port=$(echo ${{ env.SERVICE_PARAMETERS }} | jq '.${{ inputs.service }}.port' |tr -d '"' )
                echo "PORT=$service_port" >> $GITHUB_OUTPUT
                service_url=$(echo ${{ env.SERVICE_PARAMETERS }} | jq '.${{ inputs.service }}.url' |tr -d '"' )
                echo "URL=$service_url" >> $GITHUB_OUTPUT

      - name: Bump version
        uses: remorses/bump-version@js
        with:
            version_file: ./VERSION
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get New Version Number
        id: version
        run: |
            version=$(cat VERSION)
            echo "VERSION=$version" >> $GITHUB_OUTPUT

      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.1.1
        with:
          file: Dockerfile
          context: .
          push: true
          tags:  ghcr.io/shimonelbaz/moon_active_task:latest , ghcr.io/shimonelbaz/moon_active_task:${{ steps.version.outputs.VERSION }}

      # Deploy using Helm charts
      - name: Deploy Using Helm            
        uses: WyriHaximus/github-action-helm3@v3
        with:
            exec: helm upgrade ${{ inputs.service }} charts/app/ --install --wait --atomic --namespace=webapp --set image.tag='${{ steps.version.outputs.VERSION }}' --set image.repository='${{ env.IMAGE_REPO }}' --set env.API_URL='${{ steps.service-parameters.outputs.URL }}' --set env.LISTEN_PORT=${{ steps.service-parameters.outputs.PORT }} --set service.port='${{ steps.service-parameters.outputs.PORT }}' --set service.name='${{ inputs.service }}' --set  service.hostname='${{ env.DNS_NAME }}'
            kubeconfig: ${{ secrets.KUBECONFIG }}
            overrule_existing_kubeconfig: true
  
      # Run Tests
      - name: Test Deployed Service
        run: |
          ready_status=$(curl -s -o /dev/null --connect-timeout 120 --max-time 120 --retry 5 --retry-delay 5 --retry-all-errors -w "%{http_code}" https://${{ env.DNS_NAME }}/${{ inputs.service }}/ready)
          api_status=$(curl -s -o /dev/null --connect-timeout 120 --max-time 120 --retry 5 --retry-delay 5 --retry-all-errors -w "%{http_code}" https://${{ env.DNS_NAME }}/${{ inputs.service }})
          if (( $ready_status != 200 || $api_status != 200 )); then
            echo "Endpoints Are Failing!"
            exit 1
          else
            echo "Endpoints Response Is OK!"
          fi
    